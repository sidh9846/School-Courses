<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.7"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>CP264: Lab 5: src/queue_dynamic.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">CP264: Lab 5<span id="projectnumber">&#160;2023-09-07</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.7 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('queue__dynamic_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">queue_dynamic.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br />
<code>#include &lt;stdlib.h&gt;</code><br />
<code>#include &lt;string.h&gt;</code><br />
<code>#include &lt;stdbool.h&gt;</code><br />
<code>#include &lt;limits.h&gt;</code><br />
<code>#include &lt;assert.h&gt;</code><br />
<code>#include &quot;<a class="el" href="data_8h_source.htm">data.h</a>&quot;</code><br />
</div>
<p><a href="queue__dynamic_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structqueue__struct.htm">queue_struct</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="define-members" name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a8aaddd0696c00a46696b4a67dbacce7a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#a8aaddd0696c00a46696b4a67dbacce7a">QUEUE_INIT</a>&#160;&#160;&#160;8</td></tr>
<tr class="separator:a8aaddd0696c00a46696b4a67dbacce7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:adc6607f75141055eb21b91836e25b3d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structqueue__struct.htm">queue_struct</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#adc6607f75141055eb21b91836e25b3d0">queue_initialize</a> (<a class="el" href="data_8h.htm#a9dfdc9c5decf49011dbd1654d2adf39f">data_type_string</a> to_string, data_type_copy copy)</td></tr>
<tr class="separator:adc6607f75141055eb21b91836e25b3d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61949d1387fd9b289cfc5752d73dfb25"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#a61949d1387fd9b289cfc5752d73dfb25">queue_destroy</a> (<a class="el" href="structqueue__struct.htm">queue_struct</a> **queue)</td></tr>
<tr class="separator:a61949d1387fd9b289cfc5752d73dfb25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f9b89fefaf8ecf854bc17534306366a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#a9f9b89fefaf8ecf854bc17534306366a">queue_empty</a> (const <a class="el" href="structqueue__struct.htm">queue_struct</a> *queue)</td></tr>
<tr class="separator:a9f9b89fefaf8ecf854bc17534306366a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada0b72b8ba1e1bf3d09c8a36e81cb469"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#ada0b72b8ba1e1bf3d09c8a36e81cb469">queue_full</a> (const <a class="el" href="structqueue__struct.htm">queue_struct</a> *queue)</td></tr>
<tr class="separator:ada0b72b8ba1e1bf3d09c8a36e81cb469"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a76a6f601143115fec3c369b644aac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#a90a76a6f601143115fec3c369b644aac">queue_count</a> (const <a class="el" href="structqueue__struct.htm">queue_struct</a> *queue)</td></tr>
<tr class="separator:a90a76a6f601143115fec3c369b644aac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90e2437d5ffbb196a2dad7ecee14d240"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#a90e2437d5ffbb196a2dad7ecee14d240">queue_insert</a> (<a class="el" href="structqueue__struct.htm">queue_struct</a> *queue, <a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *item)</td></tr>
<tr class="separator:a90e2437d5ffbb196a2dad7ecee14d240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69b3548607931ea35fab88bb24d9a9f2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#a69b3548607931ea35fab88bb24d9a9f2">queue_peek</a> (const <a class="el" href="structqueue__struct.htm">queue_struct</a> *queue, <a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *item)</td></tr>
<tr class="separator:a69b3548607931ea35fab88bb24d9a9f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e417e7ceb3c4f5d3393f8a58d0ef7c9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#a0e417e7ceb3c4f5d3393f8a58d0ef7c9">queue_remove</a> (<a class="el" href="structqueue__struct.htm">queue_struct</a> *queue, <a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *item)</td></tr>
<tr class="separator:a0e417e7ceb3c4f5d3393f8a58d0ef7c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1905f060f5c5cc822ea557f8b0945eab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="queue__dynamic_8h.htm#a1905f060f5c5cc822ea557f8b0945eab">queue_display</a> (const <a class="el" href="structqueue__struct.htm">queue_struct</a> *queue, char string[], size_t size)</td></tr>
<tr class="separator:a1905f060f5c5cc822ea557f8b0945eab"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><hr  />
<h2><a class="anchor" id="autotoc_md13"></a>
Lab 5 Dynamic queue Header File</h2>
<dl class="section author"><dt>Author</dt><dd>David Brown, 123456789, <a href="#" onclick="location.href='mai'+'lto:'+'dbr'+'ow'+'n@w'+'lu'+'.ca'; return false;">dbrow<span class="obfuscator">.nosp@m.</span>n@wl<span class="obfuscator">.nosp@m.</span>u.ca</a></dd></dl>
<dl class="section version"><dt>Version</dt><dd>2023-10-01</dd></dl>
<hr  />
<p> DO NOT CHANGE CONTENTS </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a8aaddd0696c00a46696b4a67dbacce7a" name="a8aaddd0696c00a46696b4a67dbacce7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8aaddd0696c00a46696b4a67dbacce7a">&#9670;&#160;</a></span>QUEUE_INIT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define QUEUE_INIT&#160;&#160;&#160;8</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initial queue size. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a90a76a6f601143115fec3c369b644aac" name="a90a76a6f601143115fec3c369b644aac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90a76a6f601143115fec3c369b644aac">&#9670;&#160;</a></span>queue_count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int queue_count </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__struct.htm">queue_struct</a> *&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the number of items in the queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td>- pointer to a queue. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the number of items in the queue. </dd></dl>

</div>
</div>
<a id="a61949d1387fd9b289cfc5752d73dfb25" name="a61949d1387fd9b289cfc5752d73dfb25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61949d1387fd9b289cfc5752d73dfb25">&#9670;&#160;</a></span>queue_destroy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void queue_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__struct.htm">queue_struct</a> **&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destroys a queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1905f060f5c5cc822ea557f8b0945eab" name="a1905f060f5c5cc822ea557f8b0945eab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1905f060f5c5cc822ea557f8b0945eab">&#9670;&#160;</a></span>queue_display()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void queue_display </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__struct.htm">queue_struct</a> *&#160;</td>
          <td class="paramname"><em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>string</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Prints the items in a queue from front to rear. (For testing only).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td>- pointer to a queue </td></tr>
    <tr><td class="paramname">string</td><td>- string buffer </td></tr>
    <tr><td class="paramname">size</td><td>- maximum size of string buffer </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9f9b89fefaf8ecf854bc17534306366a" name="a9f9b89fefaf8ecf854bc17534306366a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f9b89fefaf8ecf854bc17534306366a">&#9670;&#160;</a></span>queue_empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_empty </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__struct.htm">queue_struct</a> *&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines if a queue is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td>- pointer to a queue. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the queue is empty, false otherwise. </dd></dl>

</div>
</div>
<a id="ada0b72b8ba1e1bf3d09c8a36e81cb469" name="ada0b72b8ba1e1bf3d09c8a36e81cb469"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada0b72b8ba1e1bf3d09c8a36e81cb469">&#9670;&#160;</a></span>queue_full()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_full </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__struct.htm">queue_struct</a> *&#160;</td>
          <td class="paramname"><em>queue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines if the queue is full. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td>- pointer to a queue. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the queue is full, false otherwise. </dd></dl>

</div>
</div>
<a id="adc6607f75141055eb21b91836e25b3d0" name="adc6607f75141055eb21b91836e25b3d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc6607f75141055eb21b91836e25b3d0">&#9670;&#160;</a></span>queue_initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structqueue__struct.htm">queue_struct</a> * queue_initialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a9dfdc9c5decf49011dbd1654d2adf39f">data_type_string</a>&#160;</td>
          <td class="paramname"><em>to_string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">data_type_copy&#160;</td>
          <td class="paramname"><em>copy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes a queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">to_string</td><td>- the data to_string function </td></tr>
    <tr><td class="paramname">copy</td><td>- the data copy function </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- pointer to a queue </dd></dl>

</div>
</div>
<a id="a90e2437d5ffbb196a2dad7ecee14d240" name="a90e2437d5ffbb196a2dad7ecee14d240"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90e2437d5ffbb196a2dad7ecee14d240">&#9670;&#160;</a></span>queue_insert()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__struct.htm">queue_struct</a> *&#160;</td>
          <td class="paramname"><em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inserts an item into a queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td>- pointer to a queue. </td></tr>
    <tr><td class="paramname">item</td><td>- the item to insert. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- true if item inserted, false otherwise (queue is full) </dd></dl>

</div>
</div>
<a id="a69b3548607931ea35fab88bb24d9a9f2" name="a69b3548607931ea35fab88bb24d9a9f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69b3548607931ea35fab88bb24d9a9f2">&#9670;&#160;</a></span>queue_peek()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_peek </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structqueue__struct.htm">queue_struct</a> *&#160;</td>
          <td class="paramname"><em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns a copy of the item on the front of a queue. queue is unchanged.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td>- pointer to a queue. </td></tr>
    <tr><td class="paramname">item</td><td>- the item to peek. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- true if item peeked, false otherwise (queue is empty) </dd></dl>

</div>
</div>
<a id="a0e417e7ceb3c4f5d3393f8a58d0ef7c9" name="a0e417e7ceb3c4f5d3393f8a58d0ef7c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e417e7ceb3c4f5d3393f8a58d0ef7c9">&#9670;&#160;</a></span>queue_remove()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool queue_remove </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structqueue__struct.htm">queue_struct</a> *&#160;</td>
          <td class="paramname"><em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a3a4aad394acbc16c69c7c736f90f19b3">data_type</a> *&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns and removes the item on the front of a queue.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">queue</td><td>- pointer to a queue. </td></tr>
    <tr><td class="paramname">item</td><td>- the item to peek. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- true if item removeped, false otherwise (queue is empty) </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="queue__dynamic_8h.htm">queue_dynamic.h</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.7 </li>
  </ul>
</div>
</body>
</html>
